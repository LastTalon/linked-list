[{"title":"Getting Started","type":0,"sectionRef":"#","url":"/linked-list/docs/intro","content":"","keywords":""},{"title":"Installation​","type":1,"pageTitle":"Getting Started","url":"/linked-list/docs/intro#installation","content":"To use this linked list, you need to include it as a dependency in yourwally.toml file. It can then be installed with Wally. LinkedList = &quot;lasttalon/linked-list@0.1.0&quot;  "},{"title":"Usage​","type":1,"pageTitle":"Getting Started","url":"/linked-list/docs/intro#usage","content":"To create a linked list in your project, simply require the module and use the new constructor. We can then manipulate the list using the provided methods. local LinkedList = require(ReplicatedStorage.Packages.LinkedList) -- Create a new linked list local list = LinkedList.new() -- Add some values to the list list:Push(1) list:Push(2) list:Push(3) -- Remove the last value from the list local value = list:Pop() print(value) -- 3 -- Iterate over the list for value in list do print(value) end  Refer to the API documentation for more detailed information. "},{"title":"LinkedList","type":0,"sectionRef":"#","url":"/linked-list/api/LinkedList","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#types","content":" "},{"title":"Entry<T>​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#Entry<T>","content":"&lt;/&gt; interface Entry&lt;T&gt; { remove: () → () } An entry in a LinkedList. Allows removing this entry from the list. This is a constant time operation. "},{"title":"Functions​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#functions","content":" "},{"title":"new​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#new","content":"&lt;/&gt; LinkedList.new() → () Creates a new LinkedList.  "},{"title":"Push​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#Push","content":"&lt;/&gt; LinkedList:Push(value: T) → Entry&lt;T&gt; Pushes a new entry to the back of this list.  "},{"title":"Unshift​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#Unshift","content":"&lt;/&gt; LinkedList:Unshift(value: T) → Entry&lt;T&gt; Unshifts a new entry to the front of this list.  "},{"title":"Shift​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#Shift","content":"&lt;/&gt; LinkedList:Shift() → unknown Shifts an entry off of the front of this list.  "},{"title":"Pop​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#Pop","content":"&lt;/&gt; LinkedList:Pop() → unknown Pops an entry off of the back of this list.  "},{"title":"iterating over LinkedList​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#__iter","content":"&lt;/&gt; for T, Entry&lt;T&gt; in LinkedList do Iterates over all entries in this list. Iteration returns the value stored in each entry, followed by an Entry object which can be used to manipulate this entry in the list. for value, entry in list do if value == &quot;foo&quot; then entry.remove() end end   "},{"title":"IterReversed​","type":1,"pageTitle":"LinkedList","url":"/linked-list/api/LinkedList#IterReversed","content":"&lt;/&gt; LinkedList:IterReversed() → ( T,-- The value stored in the entry Entry&lt;T&gt;-- The entry object ) Iterates over all entries in this list in reverse order. Iteration returns the value stored in each entry, followed by an Entry object which can be used to manipulate this entry in the list. for value, entry in list:IterReversed() do if value == &quot;foo&quot; then entry.remove() end end  "}]